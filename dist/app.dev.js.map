{"version":3,"sources":["app.js"],"names":["path","require","express","bodyParser","errorController","sequelize","Product","User","Cart","CartItem","Order","OrderItem","app","set","adminRoutes","shopRoutes","use","urlencoded","extended","join","__dirname","req","res","next","findByPk","then","user","err","console","log","get404","belongsTo","constraints","onDelete","hasMany","hasOne","belongsToMany","through","sync","result","create","name","email","createCart","cart","listen"],"mappings":"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","sourcesContent":["// requires path object, the object is defined in the other .js files\r\nconst path = require('path')\r\n\r\n// requires express module installed\r\nconst express = require('express')\r\n\r\n// requires body-parser object, defined on other .js pages\r\nconst bodyParser = require('body-parser')\r\n\r\n// imports error controller location\r\nconst errorController = require('./controllers/error')\r\n\r\n// imports sequelize database location\r\nconst sequelize = require('./util/database')\r\n\r\n// import sequelize models location\r\nconst Product = require('./models/product')\r\nconst User = require('./models/user')\r\nconst Cart = require('./models/cart')\r\nconst CartItem = require('./models/cart-item')\r\nconst Order = require('./models/order')\r\nconst OrderItem = require('./models/order-item')\r\n\r\n// creates express object named app\r\nconst app = express()\r\n\r\n// sets global config value, this is settings the default engine and its location\r\n\r\napp.set('view engine', 'ejs')\r\napp.set('views', 'views')\r\n\r\n// creates objects with a path defined\r\nconst adminRoutes = require('./routes/admin')\r\nconst shopRoutes = require('./routes/shop')\r\n\r\n// not sure\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// defines a location to allow access to files you otherwise could not access\r\napp.use(express.static(path.join(__dirname, 'public')))\r\n\r\n// registering middleware, function call to database to retrieve user\r\napp.use((req, res, next) => {\r\n  User.findByPk(1)\r\n    .then(user => {\r\n      req.user = user\r\n      next()\r\n    })\r\n    .catch(err => console.log(err))\r\n})\r\n\r\n// defines page locations\r\napp.use('/admin', adminRoutes)\r\napp.use(shopRoutes)\r\n\r\n// defines response for a url error 404\r\napp.use(errorController.get404)\r\n\r\n// relates modules to database\r\nProduct.belongsTo(User, { constraints: true, onDelete: 'CASCADE' })\r\nUser.hasMany(Product)\r\nUser.hasOne(Cart)\r\nCart.belongsTo(User)\r\nCart.belongsToMany(Product, { through: CartItem })\r\nProduct.belongsToMany(Cart, { through: CartItem })\r\nOrder.belongsTo(User)\r\nUser.hasMany(Order)\r\nOrder.belongsToMany(Product, { through: OrderItem })\r\n\r\n// checks models defined, creates tables for them and relations if they do not already exist\r\nsequelize\r\n  // .sync({ force: true })\r\n  .sync()\r\n  .then(result => {\r\n    return User.findByPk(1)\r\n    // console.log(result)\r\n  })\r\n  .then(user => {\r\n    if (!user) {\r\n      return User.create({ name: 'Max', email: 'test@test.com' })\r\n    }\r\n    return user\r\n  })\r\n  .then(user => {\r\n    // console.log(user)\r\n    return user.createCart()\r\n  })\r\n  .then(cart => {\r\n    app.listen(3000)\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n  })\r\n"],"file":"app.dev.js"}