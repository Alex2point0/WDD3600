"use strict";var path=require("path"),express=require("express"),bodyParser=require("body-parser"),errorController=require("./controllers/error"),sequelize=require("./util/database"),Product=require("./models/product"),User=require("./models/user"),Cart=require("./models/cart"),CartItem=require("./models/cart-item"),Order=require("./models/order"),OrderItem=require("./models/order-item"),app=express();app.set("view engine","ejs"),app.set("views","views");var adminRoutes=require("./routes/admin"),shopRoutes=require("./routes/shop");app.use(bodyParser.urlencoded({extended:!1})),app.use(express.static(path.join(__dirname,"public"))),app.use(function(r,e,t){User.findByPk(1).then(function(e){r.user=e,t()}).catch(function(e){return console.log(e)})}),app.use("/admin",adminRoutes),app.use(shopRoutes),app.use(errorController.get404),Product.belongsTo(User,{constraints:!0,onDelete:"CASCADE"}),User.hasMany(Product),User.hasOne(Cart),Cart.belongsTo(User),Cart.belongsToMany(Product,{through:CartItem}),Product.belongsToMany(Cart,{through:CartItem}),Order.belongsTo(User),User.hasMany(Order),Order.belongsToMany(Product,{through:OrderItem}),sequelize.sync().then(function(e){return User.findByPk(1)}).then(function(e){return e||User.create({name:"Max",email:"test@test.com"})}).then(function(e){return e.createCart()}).then(function(e){app.listen(3e3)}).catch(function(e){console.log(e)});
//# sourceMappingURL=app.min.js.map
