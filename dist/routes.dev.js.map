{"version":3,"sources":["routes.js"],"names":["fs","require","requestHandler","req","res","url","method","write","end","body","on","chunk","console","log","push","parsedBody","Buffer","concat","toString","message","split","writeFile","err","statusCode","setHeader","exports","handler","someText"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMC,GAAG,GAAGF,GAAG,CAACE,GAAhB;AACA,MAAMC,MAAM,GAAGH,GAAG,CAACG,MAAnB;;AAEA,MAAGD,GAAG,KAAK,GAAX,EAAe;AACPD,IAAAA,GAAG,CAACG,KAAJ,CAAU,QAAV;AACAH,IAAAA,GAAG,CAACG,KAAJ,CAAU,0CAAV;AACAH,IAAAA,GAAG,CAACG,KAAJ,CAAU,iIAAV;AACAH,IAAAA,GAAG,CAACG,KAAJ,CAAU,SAAV;AACA,WAAOH,GAAG,CAACI,GAAJ,EAAP;AACP;;AAED,MAAGH,GAAG,KAAK,UAAR,IAAsBC,MAAM,KAAK,MAApC,EAA2C;AACvC,QAAMG,IAAI,GAAG,EAAb;AACAN,IAAAA,GAAG,CAACO,EAAJ,CAAO,MAAP,EAAe,UAACC,KAAD,EAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAF,MAAAA,IAAI,CAACK,IAAL,CAAUH,KAAV;AACH,KAHD;AAIA,WAAOR,GAAG,CAACO,EAAJ,CAAO,KAAP,EAAc,YAAM;AACvB,UAAMK,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcR,IAAd,EAAoBS,QAApB,EAAnB;AACA,UAAMC,OAAO,GAAGJ,UAAU,CAACK,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAhB;AACApB,MAAAA,EAAE,CAACqB,SAAH,CAAa,aAAb,EAA4BF,OAA5B,EAAqC,UAAAG,GAAG,EAAI;AACxClB,QAAAA,GAAG,CAACmB,UAAJ,GAAiB,GAAjB;AACAnB,QAAAA,GAAG,CAACoB,SAAJ,CAAc,UAAd,EAA0B,GAA1B;AACA,eAAOpB,GAAG,CAACI,GAAJ,EAAP;AACH,OAJD;AAKH,KARM,CAAP;AASH;;AAEDJ,EAAAA,GAAG,CAACoB,SAAJ,CAAc,cAAd,EAA8B,WAA9B;AACApB,EAAAA,GAAG,CAACG,KAAJ,CAAU,QAAV;AACAH,EAAAA,GAAG,CAACG,KAAJ,CAAU,0CAAV;AACAH,EAAAA,GAAG,CAACG,KAAJ,CAAU,qDAAV;AACAH,EAAAA,GAAG,CAACG,KAAJ,CAAU,SAAV;AACAH,EAAAA,GAAG,CAACI,GAAJ;AACH,CAnCD,C,CAqCI;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEAiB,OAAO,CAACC,OAAR,GAAkBxB,cAAlB;AACAuB,OAAO,CAACE,QAAR,GAAmB,sBAAnB","sourcesContent":["const fs = require('fs');\r\n\r\nconst requestHandler = (req, res) => {\r\n    const url = req.url;\r\n    const method = req.method;\r\n\r\n    if(url === '/'){\r\n            res.write('<html>');\r\n            res.write('<head><title>Enter Message</title><head>');\r\n            res.write('<body><form action=\"/message\" method=\"POST\"><input type=\"text\" name=\"message\"><button type=\"submit\">Send</button></form></body>');\r\n            res.write('</html>');\r\n            return res.end();\r\n    }\r\n    \r\n    if(url === '/message' && method === 'POST'){\r\n        const body = [];\r\n        req.on('data', (chunk) => {\r\n            console.log(chunk)\r\n            body.push(chunk);\r\n        });\r\n        return req.on('end', () => {\r\n            const parsedBody = Buffer.concat(body).toString();\r\n            const message = parsedBody.split('=')[1];\r\n            fs.writeFile('message.txt', message, err => {\r\n                res.statusCode = 302;\r\n                res.setHeader('Location', '/');\r\n                return res.end();\r\n            });\r\n        });\r\n    }\r\n    \r\n    res.setHeader('Content-Type', 'text/html');\r\n    res.write('<html>');\r\n    res.write('<head><title>My First Page</title><head>');\r\n    res.write('<body><h1>Hello from my Node.js Server!</h1></body>');\r\n    res.write('</html>');\r\n    res.end();\r\n};\r\n\r\n    // module.exports = requestHandler;\r\n\r\n    // module.exports = {\r\n    //    handler: requestHandler,\r\n    //    someText: 'Some hard coded text'\r\n    // };\r\n\r\n    // module.exports.handler = requestHandler;\r\n    // module.exports.someText = 'Some text';\r\n\r\n    exports.handler = requestHandler;\r\n    exports.someText = 'Some hard coded text';"],"file":"routes.dev.js"}