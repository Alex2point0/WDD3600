{"version":3,"sources":["cart.js"],"names":["fs","require","path","p","join","dirname","process","mainModule","filename","module","exports","Cart","_classCallCheck","this","_createClass","key","value","id","productPrice","readFile","err","fileContent","cart","products","totalPrice","JSON","parse","updatedProduct","existingProductIndex","findIndex","prod","existingProduct","_objectSpread","qty","_toConsumableArray","concat","writeFile","stringify","console","log","updatedCart","find","product","filter","productQty"],"mappings":"+jDAAA,IAAMA,GAAKC,QAAQ,MACbC,KAAOD,QAAQ,QAGfE,EAAID,KAAKE,KACbF,KAAKG,QAAQC,QAAQC,WAAWC,UAChC,OAAQ,aAEVC,OAAOC,QAAP,WAAA,SAAAC,IAAAC,gBAAAC,KAAAF,GAAA,OAAAG,aAAAH,EAAA,KAAA,CAAA,CAAAI,IAAA,aAAAC,MAAA,SACqBC,EAAIC,GAErBlB,GAAGmB,SAAShB,EAAG,SAACiB,EAAKC,GACnB,IAAIC,EAAO,CAAEC,SAAU,GAAIC,WAAY,GAClCJ,IACHE,EAAOG,KAAKC,MAAML,IAGpB,IAEIM,EAFEC,EAAuBN,EAAKC,SAASM,UAAU,SAAAC,GAAI,OAAIA,EAAKb,KAAOA,IACnEc,EAAkBT,EAAKC,SAASK,GAGlCG,IArBFJ,EAARK,cAAA,GAAAD,IAuBuBE,IAAMN,EAAeM,IAAM,EAtBxCX,EAAGrB,SAAHiC,mBAEVZ,EAAAC,UAsBQD,EAAKC,SAASK,GAAwBD,IArBpCzB,EACHG,CAAAA,GAAQC,EAAAA,IAAQC,GAuBfe,EAAKC,SAAL,GAAAY,OAAAD,mBAAoBZ,EAAKC,UAAzB,CAAmCI,KApB3CL,EAAAE,WAAAF,EAAAE,aAAAN,EAAAlB,GAAAoC,UAAAjC,EAAAsB,KAAAY,UAAAf,GAAA,SAAAF,GAAAkB,QAAAC,IAAAnB,SAAA,CAAAL,IAAA,gBAAAC,MAAA,SAAAC,EAAAC,GAAAlB,GAAAmB,SAAAhB,EAAA,SAAAiB,EAAAC,GAEI,IAAAD,EAAA,CAEeG,IAAAA,EAAFS,cAAA,GAAAP,KAAAC,MAAAL,IAAgBG,EAAYgB,EAAAjB,SAAAkB,KAAA,SAAAX,GAAA,OAAAA,EAAAb,KAAAA,IAA5B,GAAXyB,EAAW,CAETpB,IAAAA,EAAYI,EAAML,IACnBmB,EACDjB,SAAAiB,EAAAjB,SAAAoB,OAAA,SAAAb,GAAA,OAAAA,EAAAb,KAAAA,IAiCAuB,EAAYhB,WAAagB,EAAYhB,WAAaN,EAAe0B,EAhCjE5C,GAAAoC,UAAMR,EAAAA,KAAAA,UAAuBN,GAAcO,SAAAA,GAAcS,QAAAC,IAAIT,WATnE,CAAAf,IAAA,cAAAC,MAAA,SAaUe,GACFJ,GAAAA,SAAAA,EAAAA,SAAAA,EAAcN,GACdM,IAAAA,EAAAA,KAAcD,MAAdL,GAEAC,EADAA,EACAA,KAEAK,SAnBRhB,EAAA","file":"cart.min.js","sourcesContent":["const fs = require('fs')\r\nconst path = require('path')\r\n\r\n// will write data content to products.json file\r\nconst p = path.join(\r\n  path.dirname(process.mainModule.filename),\r\n  'data', 'cart.json')\r\n\r\nmodule.exports = class Cart {\r\n  static addProduct (id, productPrice) {\r\n    // Fetch the previous cart\r\n    fs.readFile(p, (err, fileContent) => {\r\n      let cart = { products: [], totalPrice: 0 }\r\n      if (!err) {\r\n        cart = JSON.parse(fileContent)\r\n      }\r\n      // Analyze the cart => Find existing Product\r\n      const existingProductIndex = cart.products.findIndex(prod => prod.id === id)\r\n      const existingProduct = cart.products[existingProductIndex]\r\n      let updatedProduct\r\n      // Add new product/increase quantity\r\n      if (existingProduct) {\r\n        updatedProduct = { ...existingProduct }\r\n        updatedProduct.qty = updatedProduct.qty + 1\r\n        cart.products = [...cart.products]\r\n        cart.products[existingProductIndex] = updatedProduct\r\n      } else {\r\n        updatedProduct = { id: id, qty: 1 }\r\n        cart.products = [...cart.products, updatedProduct]\r\n      }\r\n      cart.totalPrice = cart.totalPrice + +productPrice\r\n      fs.writeFile(p, JSON.stringify(cart), err => {\r\n        console.log(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  static deleteProduct (id, productPrice) {\r\n    fs.readFile(p, (err, fileContent) => {\r\n      if (err) {\r\n        return\r\n      }\r\n      const updatedCart = { ...JSON.parse(fileContent) }\r\n      const product = updatedCart.products.find(prod => prod.id === id)\r\n      if (!product) {\r\n        return\r\n      }\r\n      const productQty = product.qty\r\n      updatedCart.products = updatedCart.products.filter(prod => prod.id !== id)\r\n      updatedCart.totalPrice = updatedCart.totalPrice - productPrice * productQty\r\n\r\n      fs.writeFile(p, JSON.stringify(updatedCart), err => {\r\n        console.log(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  static getProducts (cb) {\r\n    fs.readFile(p, (err, fileContent) => {\r\n      const cart = JSON.parse(fileContent)\r\n      if (err) {\r\n        cb(null)\r\n      } else {\r\n        cb(cart)\r\n      }\r\n    })\r\n  }\r\n}\r\n"]}