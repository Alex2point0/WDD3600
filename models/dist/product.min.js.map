{"version":3,"sources":["product.js"],"names":["db","require","Cart","module","exports","Product","id","title","imageUrl","description","price","_classCallCheck","this","_createClass","key","value","execute"],"mappings":"mZAAA,IAAMA,GAAKC,QAAQ,oBAGbC,KAAOD,QAAQ,UAGrBE,OAAOC,QAAP,WACE,SAAAC,EAAaC,EAAIC,EAAOC,EAAUC,EAAaC,GAAOC,gBAAAC,KAAAP,GAPlDL,KAAKC,GAAAA,EASPW,KAAKL,MAAQA,EACbK,KAAKJ,SAAWA,EAPdN,KAAIO,YAAWA,EASjBG,KAAKF,MAAQA,EANjB,OAAAG,aAAAR,EAAA,CAAA,CAAAS,IAAA,OAAAC,MAAA,WACE,OAAAf,GAAAgB,QAAA,iFAAsD,CAAAJ,KAAAL,MAAAK,KAAAF,MAAAE,KAAAJ,SAAAI,KAAAH,iBADxD,CAAA,CAAAK,IAAA,aAAAC,MAAA,cAAA,CAAAD,IAAA,WAAAC,MAAA,WAAA,OAAAf,GAAAgB,QAAA,4BAAA,CAAAF,IAAA,WAAAC,MAAA,SAWcC,GAGX,OAAAhB,GAAAgB,QAAA,+CAAA,CAAAV,QAdHD,EAAA","file":"product.min.js","sourcesContent":["const db = require('../util/database')\r\n\r\n// constant holding required cart file location\r\nconst Cart = require('./cart')\r\n\r\n// exports a product object with all relevant data: title, imgUrl, description, price\r\nmodule.exports = class Product {\r\n  constructor (id, title, imageUrl, description, price) {\r\n    this.id = id\r\n    this.title = title\r\n    this.imageUrl = imageUrl\r\n    this.description = description\r\n    this.price = price\r\n  }\r\n\r\n  // writes product object data as a string to a file\r\n  save () {\r\n    return db.execute('INSERT INTO products (title, price, imageUrl, description) VALUES (?, ?, ?, ?)',\r\n      [this.title, this.price, this.imageUrl, this.description]\r\n    )\r\n  }\r\n\r\n  static deleteById (id) {\r\n\r\n  }\r\n\r\n  // similar to a utility function that calls not on a single instance of an object but retrieves all data from object.\r\n  static fetchall () {\r\n    return db.execute('SELECT * FROM products')\r\n  }\r\n\r\n  static findById (id) {\r\n    return db.execute('SELECT * FROM products WHERE products.id = ?', [id])\r\n  }\r\n}\r\n"]}