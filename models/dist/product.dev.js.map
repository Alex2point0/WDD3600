{"version":3,"sources":["product.js"],"names":["fs","require","path","Cart","p","join","dirname","process","mainModule","filename","getProductsFromFile","cb","readFile","err","fileContent","JSON","parse","module","exports","id","title","imageUrl","description","price","products","existingProductIndex","findIndex","prod","updatedProducts","writeFile","stringify","console","log","Math","random","toString","push","product","find","filter","deleteProduct"],"mappings":"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","sourcesContent":["// fs constant is holding a  a File object\r\nconst fs = require('fs')\r\n\r\n// path constant is holding a required path object, providing a location to access\r\nconst path = require('path')\r\n\r\nconst Cart = require('./cart')\r\n\r\n// will write data content to products.json file\r\nconst p = path.join(\r\n  path.dirname(process.mainModule.filename),\r\n  'data', 'products.json')\r\n\r\n// call back function to read file content\r\nconst getProductsFromFile = cb => {\r\n  fs.readFile(p, (err, fileContent) => {\r\n    if (err) {\r\n      cb([])\r\n    } else {\r\n      cb(JSON.parse(fileContent))\r\n    }\r\n  })\r\n}\r\n\r\n// exports a product object with all relevant data: title, imgUrl, description, price\r\nmodule.exports = class Product {\r\n  constructor (id, title, imageUrl, description, price) {\r\n    this.id = id\r\n    this.title = title\r\n    this.imageUrl = imageUrl\r\n    this.description = description\r\n    this.price = price\r\n  }\r\n\r\n  // writes product object data as a string to a file\r\n  save () {\r\n    getProductsFromFile(products => {\r\n      if (this.id) {\r\n        const existingProductIndex = products.findIndex(prod => prod.id === this.id)\r\n        const updatedProducts = [...products]\r\n        updatedProducts[existingProductIndex] = this\r\n        fs.writeFile(p, JSON.stringify(updatedProducts), (err) => {\r\n          console.log(err)\r\n        })\r\n      } else {\r\n        this.id = Math.random().toString()\r\n        products.push(this)\r\n        fs.writeFile(p, JSON.stringify(products), (err) => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  static deleteById (id) {\r\n    getProductsFromFile(products => {\r\n      const product = products.find(prod => prod.id === id)\r\n      const updatedProducts = products.filter(prod => prod.id !== id)\r\n      fs.writeFile(p, JSON.stringify(updatedProducts), err => {\r\n        if (!err) {\r\n          Cart.deleteProduct(id, product.price)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  // similar to a utility function that calls not on a single instance of an object but retrieves all data from object.\r\n  static fetchall (cb) {\r\n    getProductsFromFile(cb)\r\n  }\r\n\r\n  static findById (id, cb) {\r\n    getProductsFromFile(products => {\r\n      const product = products.find(p => p.id === id)\r\n      cb(product)\r\n    })\r\n  }\r\n}\r\n"],"file":"product.dev.js"}