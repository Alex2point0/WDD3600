{"version":3,"sources":["product.js"],"names":["mongodb","require","getDb","Product","title","price","description","imageUrl","id","userId","_id","ObjectId","db","db0p","collection","updateOne","$set","insertOne","then","result","console","log","err","find","toArray","products","prodId","next","product","deleteOne","module","exports"],"mappings":";;;;;;;;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAEA;;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,kBAAD,CAAP,CAA4BC,KAA1C,C,CAEA;;;IACMC,O;;;AACJ,mBAAaC,KAAb,EAAoBC,KAApB,EAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,EAAlD,EAAsDC,MAAtD,EAA8D;AAAA;;AAC5D,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKG,GAAL,GAAWF,EAAE,GAAG,IAAIR,OAAO,CAACW,QAAZ,CAAqBH,EAArB,CAAH,GAA8B,IAA3C;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD,G,CAED;;;;;2BACQ;AACN,UAAMG,EAAE,GAAGV,KAAK,EAAhB;AACA,UAAIW,IAAJ;;AACA,UAAI,KAAKH,GAAT,EAAc;AACZ;AACAG,QAAAA,IAAI,GAAGD,EAAE,CACNE,UADI,CACO,UADP,EAEJC,SAFI,CAEM;AAAEL,UAAAA,GAAG,EAAE,KAAKA;AAAZ,SAFN,EAEyB;AAAEM,UAAAA,IAAI,EAAE;AAAR,SAFzB,CAAP;AAGD,OALD,MAKO;AACLH,QAAAA,IAAI,GAAGD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BG,SAA1B,CAAoC,IAApC,CAAP;AACD;;AACD,aAAOJ,IAAI,CACRK,IADI,CACC,UAAAC,MAAM,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OAHI,WAIE,UAAAG,GAAG,EAAI;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,OANI,CAAP;AAOD;;;+BAEkB;AACjB,UAAMV,EAAE,GAAGV,KAAK,EAAhB;AACA,aAAOU,EAAE,CACNE,UADI,CACO,UADP,EAEJS,IAFI,GAGJC,OAHI,GAIJN,IAJI,CAIC,UAAAO,QAAQ,EAAI;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,eAAOA,QAAP;AACD,OAPI,WAQE,UAAAH,GAAG,EAAI;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,OAVI,CAAP;AAWD;;;6BAEgBI,M,EAAQ;AACvB,UAAMd,EAAE,GAAGV,KAAK,EAAhB;AACA,aAAOU,EAAE,CACNE,UADI,CACO,UADP,EAEJS,IAFI,CAEC;AAAEb,QAAAA,GAAG,EAAEV,OAAO,CAACW,QAAR,CAAiBe,MAAjB;AAAP,OAFD,EAGJC,IAHI,GAIJT,IAJI,CAIC,UAAAU,OAAO,EAAI;AACfR,QAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,eAAOA,OAAP;AACD,OAPI,WAQE,UAAAN,GAAG,EAAI;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,OAVI,CAAP;AAWD;;;+BAEkBI,M,EAAQ;AACzB,UAAMd,EAAE,GAAGV,KAAK,EAAhB;AACA,aAAOU,EAAE,CACNE,UADI,CACO,UADP,EAEJe,SAFI,CAEM;AAAEnB,QAAAA,GAAG,EAAE,IAAIV,OAAO,CAACW,QAAZ,CAAqBe,MAArB;AAAP,OAFN,EAGJR,IAHI,CAGC,UAAAC,MAAM,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OALI,WAME,UAAAC,GAAG,EAAI;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,OARI,CAAP;AASD;;;;;;AAEHQ,MAAM,CAACC,OAAP,GAAiB5B,OAAjB","sourcesContent":["// import mongodb\r\nconst mongodb = require('mongodb')\r\n\r\n// import getDb\r\nconst getDb = require('../util/database').getDb\r\n\r\n// class product\r\nclass Product {\r\n  constructor (title, price, description, imageUrl, id, userId) {\r\n    this.title = title\r\n    this.price = price\r\n    this.description = description\r\n    this.imageUrl = imageUrl\r\n    this._id = id ? new mongodb.ObjectId(id) : null\r\n    this.userId = userId\r\n  }\r\n\r\n  // save method to store data in db\r\n  save () {\r\n    const db = getDb()\r\n    let db0p\r\n    if (this._id) {\r\n      // update product\r\n      db0p = db\r\n        .collection('products')\r\n        .updateOne({ _id: this._id }, { $set: this })\r\n    } else {\r\n      db0p = db.collection('products').insertOne(this)\r\n    }\r\n    return db0p\r\n      .then(result => {\r\n        console.log(result)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  static fetchAll () {\r\n    const db = getDb()\r\n    return db\r\n      .collection('products')\r\n      .find()\r\n      .toArray()\r\n      .then(products => {\r\n        console.log(products)\r\n        return products\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  static findbyid (prodId) {\r\n    const db = getDb()\r\n    return db\r\n      .collection('products')\r\n      .find({ _id: mongodb.ObjectId(prodId) })\r\n      .next()\r\n      .then(product => {\r\n        console.log(product)\r\n        return product\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  static deleteById (prodId) {\r\n    const db = getDb()\r\n    return db\r\n      .collection('products')\r\n      .deleteOne({ _id: new mongodb.ObjectId(prodId) })\r\n      .then(result => {\r\n        console.log('Delete')\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\nmodule.exports = Product\r\n"],"file":"product.dev.js"}