{"version":3,"sources":["shop.js"],"names":["Product","require","Cart","exports","getProducts","req","res","next","fetchall","then","rows","fieldData","render","prods","pageTitle","path","err","console","log","getProduct","prodId","params","productId","findById","product","title","getIndex","getCart","cart","products","cartProducts","cartProductData","find","prod","id","push","productData","qty","postCart","body","addProduct","price","redirect","postCartDeleteProduct","deleteProduct","getOrders","getCheckout"],"mappings":"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","sourcesContent":["// constant holding required product location\r\nconst Product = require('../models/product')\r\n\r\nconst Cart = require('../models/cart')\r\n\r\n// export function to get all products\r\nexports.getProducts = (req, res, next) => {\r\n  Product.fetchall()\r\n    .then(([rows, fieldData]) => {\r\n      res.render('shop/product-list', {\r\n        prods: rows,\r\n        pageTitle: 'All Products',\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get singular product\r\nexports.getProduct = (req, res, next) => {\r\n  const prodId = req.params.productId\r\n  Product.findById(prodId)\r\n    .then(([product]) => {\r\n      res.render('shop/product-detail', {\r\n        product: product[0],\r\n        pageTitle: product.title,\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for shop page\r\nexports.getIndex = (req, res, next) => {\r\n  Product.fetchall()\r\n    .then(([rows, fieldData]) => {\r\n      res.render('shop/index', {\r\n        prods: rows,\r\n        pageTitle: 'Shop',\r\n        path: '/'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.getCart = (req, res, next) => {\r\n  Cart.getCart(cart => {\r\n    Product.fetchall(products => {\r\n      const cartProducts = []\r\n      for (product of products) {\r\n        const cartProductData = cart.products.find(prod => prod.id === product.id)\r\n        if (cartProductData) {\r\n          cartProducts.push({ productData: product, qty: cartProductData.qty })\r\n        }\r\n      }\r\n\r\n      res.render('shop/cart', {\r\n        pageTitle: 'Your Cart',\r\n        path: '/cart',\r\n        products: cartProducts\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.postCart = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  Product.findById(prodId, (product) => {\r\n    Cart.addProduct(prodId, product.price)\r\n  })\r\n  res.redirect('/cart')\r\n}\r\n\r\nexports.postCartDeleteProduct = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  Product.findById(prodId, product => {\r\n    Cart.deleteProduct(prodId, product.price)\r\n    res.redirect('/cart')\r\n  })\r\n}\r\n\r\n// export function to get content for orders page\r\nexports.getOrders = (req, res, next) => {\r\n  res.render('shop/orders', {\r\n    pageTitle: 'Your Orders',\r\n    path: '/orders'\r\n  })\r\n}\r\n\r\n// export function to get content for checkout page\r\nexports.getCheckout = (req, res, next) => {\r\n  res.render('shop/checkout', {\r\n    pageTitle: 'Checkout',\r\n    path: '/checkout'\r\n  })\r\n}\r\n"],"file":"shop.dev.js"}