{"version":3,"sources":["admin.js"],"names":["require","redirect","Product","exports","next","res","render","path","getAddProduct","editing","req","title","body","imageUrl","price","postAddProduct","description","createProduct","result","err","getEditProduct","editMode","query","edit","params","productId","user","getProducts","where","id","prodId","then","products","product","pageTitle","console","log","updatedPrice","updatedImageUrl","updatedDesc","findById","updatedTitle","postEditProduct","prods","postDeleteProduct","destroy"],"mappings":"0BAAqBA,QAAQ,wBAArBC,kBAAAA,SACFC,QAAUF,QAAQ,qBAExBG,QAHQF,cAAAA,SAAAA,EAAAA,EAG2BG,GACjCC,EAAIC,OAAO,qBAAsB,CAH7BJ,UAAUF,cAKZO,KAAM,qBAHVJ,SAAQK,KAIJC,QAAAA,eAAS,SAAAC,EAAAL,EAAAD,GAHsB,IAAjCO,EAAAD,EAAAE,KAAAD,MADFE,EAAAH,EAAAE,KAAAC,SAWQC,EAAQJ,EAAIE,KAAKE,MAHjBC,EAARL,EAAyBE,KAAAI,YACvBN,EAAMC,KAAKM,cAAYN,CACvBA,MAAME,EACNC,MAAWA,EACXD,SAAMG,EACNN,YAASO,IAEPH,KAAK,SAAAI,GACLL,QAAUA,IAAAA,GACVG,EAAAA,SAAaA,qBARf,MAWW,SAAAG,GACPd,QAAIJ,IAASkB,MAKlBhB,QAlBDiB,eAAA,SAAAV,EAAAL,EAAAD,GAqBE,IAAMiB,EAAWX,EAAIY,MAAMC,KAD7BpB,IAAOkB,EACL,OAAMA,EAAQpB,SAAOqB,KACrB,IAAKD,EAAUX,EAAAc,OAAAC,UACbf,EAAAgB,KACDC,YAAA,CAAAC,MAAA,CAAAC,GAAAC,KACDC,KAAMD,SAAAA,GACFJ,IACDC,EADHK,EACe,GAAEJ,IAAOK,EAAI,OAAEH,EAAAA,SAAAA,KAC5BzB,EAAAC,OAAA,qBAAA,CACM4B,UAAAF,eACEC,KAAAA,sBAOJxB,QAASY,EANPY,QAAJA,MARF,MAkBO,SAAAd,GAAG,OAAIgB,QAAQC,IAAIjB,MALtBZ,QAAAA,gBAAM,SAAAG,EAAAL,EAFyBD,GAG/BK,IAAAA,EAASY,EAAAA,KAHsBI,UAI/BQ,EAASA,EAAAA,KAAAA,MAJXI,EAAA3B,EAAAE,KAAAE,MARJwB,EAeSnB,EAAGP,KAAAC,SAAA0B,EAAI7B,EAAAE,KAAJI,YAAAd,QAfZsC,SAAAV,GANFC,KAAA,SAAAE,GA2BQI,OAKFJ,EAAQtB,MAAQ8B,EARtBtC,EAAQuC,MAAAA,EACAZ,EAAMd,YAAYS,EAClBgB,EAAAA,SAAmB7B,EACnByB,EAAe3B,SAErBqB,KAAMQ,SAAAA,GACNrC,QAAQsC,IAAR,oBAEIP,EAAAA,SAAA,qBAXQ,MAaD,SAAAd,GAACH,OAAAA,QAAcuB,IAAAA,MAGvBpC,QACA4B,YAAKb,SAAAA,EAAUb,EAAAD,GACd+B,EAAAA,KACA9B,cAVJ0B,KAAA,SAAAC,GAYY3B,EAAAC,OAAI6B,iBAAJ,CAZZQ,MAAAX,EANFE,UAAA,iBA4BQ3B,KAAM,sBAbR4B,MAUI7B,SAAAA,GACFqC,QAAOX,IAAAA,MAIV7B,QARHyC,kBASY,SAAIlC,EAAAL,EAAAD,GACZ+B,IAAAA,EAAYhB,EAAZP,KAAAa,UACDvB,QAXHsC,SAAAV,GADFC,KAAA,SAAAE,GAmBM,OAAOA,EAAQY,YAHnBd,KAAMD,SAAAA,GACN5B,QAAQsC,IAAR,sBAEInC,EAAAJ,SAAe4C,qBAPhB,MAUQ,SAAA1B,GAACiB,OAAID,QAAAC,IAAAjB","file":"admin.min.js","sourcesContent":["const { redirect } = require('express/lib/response')\r\nconst Product = require('../models/product')\r\n\r\nexports.getAddProduct = (req, res, next) => {\r\n  res.render('admin/edit-product', {\r\n    pageTitle: 'Add Product',\r\n    path: '/admin/add-product',\r\n    editing: false\r\n  })\r\n}\r\n\r\nexports.postAddProduct = (req, res, next) => {\r\n  const title = req.body.title\r\n  const imageUrl = req.body.imageUrl\r\n  const price = req.body.price\r\n  const description = req.body.description\r\n  req.user.createProduct({\r\n    title: title,\r\n    price: price,\r\n    imageUrl: imageUrl,\r\n    description: description\r\n  })\r\n    .then(result => {\r\n      console.log(result)\r\n      res.redirect('/admin/products')\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexports.getEditProduct = (req, res, next) => {\r\n  const editMode = req.query.edit\r\n  if (!editMode) {\r\n    return res.redirect('/')\r\n  }\r\n  const prodId = req.params.productId\r\n  req.user\r\n    .getProducts({ where: { id: prodId } })\r\n    // Product.findById(prodId)\r\n    .then(products => {\r\n      const product = products[0]\r\n      if (!product) {\r\n        return res.redirect('/')\r\n      }\r\n      res.render('admin/edit-product', {\r\n        pageTitle: 'Edit Product',\r\n        path: '/admin/edit-product',\r\n        editing: editMode,\r\n        product: product\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexports.postEditProduct = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  const updatedTitle = req.body.title\r\n  const updatedPrice = req.body.price\r\n  const updatedImageUrl = req.body.imageUrl\r\n  const updatedDesc = req.body.description\r\n  Product.findById(prodId)\r\n    .then(product => {\r\n      product.title = updatedTitle\r\n      product.price = updatedPrice\r\n      product.description = updatedDesc\r\n      product.imageUrl = updatedImageUrl\r\n      return product.save()\r\n    })\r\n    .then(result => {\r\n      console.log('Updated Product!')\r\n      res.redirect('/admin/products')\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexports.getProducts = (req, res, next) => {\r\n  req.user\r\n    .getProducts()\r\n    .then(products => {\r\n      res.render('admin/products', {\r\n        prods: products,\r\n        pageTitle: 'Admin Products',\r\n        path: '/admin/products'\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexports.postDeleteProduct = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  Product.findById(prodId)\r\n    .then(product => {\r\n      return product.destroy()\r\n    })\r\n    .then(result => {\r\n      console.log('Destroyed Product!')\r\n      res.redirect('/admin/products')\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n"]}