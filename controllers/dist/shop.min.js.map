{"version":3,"sources":["shop.js"],"names":["Product","require","Cart","exports","getProducts","req","res","next","fetchall","then","_ref","_ref2","_slicedToArray","rows","render","prods","path","err","console","log","fieldData","params","productId","findById","prodId","_ref3","pageTitle","product","title","getProduct","_ref6","_ref5","getCart","cart","products","cartProducts","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","getIndex","_step","value","find","prod","id","cartProductData","push","productData","qty","_iterator","body","addProduct","price","redirect","postCartDeleteProduct","deleteProduct","getCheckout"],"mappings":"mnBACA,IAAMA,QAAUC,QAAQ,qBAElBC,KAAOD,QAAQ,kBAGrBE,QAAQC,YAAc,SAACC,EAAKC,EAAKC,GAC/BP,QAAQQ,WACLC,KAAK,SAAAC,GAAuB,IAAAC,EAAAC,eAAAF,EAAA,GAArBG,EAAqBF,EAAA,GAAAA,EAAA,GAC3BL,EAAIQ,OAAO,oBAAqB,CATtCC,MAAAF,EACMb,UAAUC,eAWRe,KAAM,gBALZ,MAQS,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAPGd,QAArBU,WAAqB,SAAAR,EAAAC,EAAAC,GAAA,IAAfa,EAAef,EAAAgB,OAAAC,UAa/BtB,QAAQuB,SAASC,GAZblB,KAAIQ,SAAAA,GAAO,IAAPA,EAAOF,eAAAa,EAAA,GAAA,GACTV,EAAAA,OAD8B,sBAAA,CAE9BW,QAAWC,EAAA,GACXX,UAAMW,EAAAC,MAHRZ,KAAA,gBAYJ,MAdA,SAAAC,GAAA,OAAAC,QAAAC,IAAAF,MAYFd,QAAQ0B,SAAR,SAAAxB,EAAqBC,EAAAC,GACnBP,QAAMwB,WACNxB,KAAQuB,SAAAA,GACA,IAAAO,EAAAlB,eAAAmB,EAAA,GADAR,EACAO,EAAA,GAAAA,EAAA,GAAexB,EAAAQ,OAAA,aAAA,CAAba,MAAad,EAgBjBa,UAAW,OAfTZ,KAAJ,QAHJ,MAMU,SAAAG,GAAE,OAAAC,QAAAC,IAAAF,MAGAd,QARZ6B,QAAA,SAAA3B,EAAAC,EAAAC,GA0BAL,KAfF8B,QAAA,SAAAC,GAgBIjC,QAAQQ,SAAS,SAAA0B,GACf,IAAMC,EAAe,GADMC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAfjCpC,IAAAA,IAAAA,EAAAA,EAAmB+B,EAAnB/B,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,MAAAA,GAAAA,EAAmB,CAAXqC,QAAWC,EAAAC,MACjB1C,IAAQQ,EACAyB,EAAAC,SAAuBS,KAAA,SAAAC,GAAA,OAAAA,EAAAC,KAAAlB,QAAAkB,KAAAC,GAArBjC,EAAqBkC,KAAA,CAAAC,YAAArB,QAAAsB,IAAAH,EAAAG,OAaA,MAAAhC,GAAAoB,GAAA,EAAAC,EAAArB,EAAA,QAAA,IAAAmB,GAAA,MAAAc,EAAA,QAAAA,EAAA,SAAA,QAAA,GAAAb,EAAA,MAAAC,GAXzBvB,EAAAA,OADuB,YAAA,CAEvBW,UAAW,YACXV,KAAM,QAHRkB,SAAAC,SAUNhC,QAAQ6B,SAAU,SAAA3B,EAAAC,EAACD,GACjBH,IAAK8B,EAAQ3B,EAAA8C,KAAAlB,UACXjC,QAAAA,SAAQQ,EAAS,SAAAmB,GACfzB,KAAAkD,WAAMjB,EAANR,EAAA0B,SAD2B/C,EAAAgD,SAAA,UAAAnD,QAAAoD,sBAAA,SAAAlD,EAAAC,EAAAC,GAE3B,IAAAiB,EAAAnB,EAAA8C,KAAA7B,UAAKK,QAAAA,SAAqBH,EAAA,SAAAG,GACxBzB,KAAAsD,cAAMV,EAAenB,EAAQO,OAAkB5B,EAAAgD,SAAA,YAEzBN,QAAAA,UAAAA,SAAAA,EAAW1C,EAAEqB,GAASsB,EAAAA,OAAAA,cAAKH,CAA7BpB,UAAlB,cACDV,KAAA,aANwBb,QAAAsD,YAAA,SAAApD,EAAAC,EAAAC,GAAAD,EAAAQ,OAAA,gBAAA,CAAAY,UAAA,WAAAV,KAAA","file":"shop.min.js","sourcesContent":["// constant holding required product location\r\nconst Product = require('../models/product')\r\n\r\nconst Cart = require('../models/cart')\r\n\r\n// export function to get all products\r\nexports.getProducts = (req, res, next) => {\r\n  Product.fetchall()\r\n    .then(([rows, fieldData]) => {\r\n      res.render('shop/product-list', {\r\n        prods: rows,\r\n        pageTitle: 'All Products',\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get singular product\r\nexports.getProduct = (req, res, next) => {\r\n  const prodId = req.params.productId\r\n  Product.findById(prodId)\r\n    .then(([product]) => {\r\n      res.render('shop/product-detail', {\r\n        product: product[0],\r\n        pageTitle: product.title,\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for shop page\r\nexports.getIndex = (req, res, next) => {\r\n  Product.fetchall()\r\n    .then(([rows, fieldData]) => {\r\n      res.render('shop/index', {\r\n        prods: rows,\r\n        pageTitle: 'Shop',\r\n        path: '/'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.getCart = (req, res, next) => {\r\n  Cart.getCart(cart => {\r\n    Product.fetchall(products => {\r\n      const cartProducts = []\r\n      for (product of products) {\r\n        const cartProductData = cart.products.find(prod => prod.id === product.id)\r\n        if (cartProductData) {\r\n          cartProducts.push({ productData: product, qty: cartProductData.qty })\r\n        }\r\n      }\r\n\r\n      res.render('shop/cart', {\r\n        pageTitle: 'Your Cart',\r\n        path: '/cart',\r\n        products: cartProducts\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.postCart = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  Product.findById(prodId, (product) => {\r\n    Cart.addProduct(prodId, product.price)\r\n  })\r\n  res.redirect('/cart')\r\n}\r\n\r\nexports.postCartDeleteProduct = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  Product.findById(prodId, product => {\r\n    Cart.deleteProduct(prodId, product.price)\r\n    res.redirect('/cart')\r\n  })\r\n}\r\n\r\n// export function to get content for orders page\r\nexports.getOrders = (req, res, next) => {\r\n  res.render('shop/orders', {\r\n    pageTitle: 'Your Orders',\r\n    path: '/orders'\r\n  })\r\n}\r\n\r\n// export function to get content for checkout page\r\nexports.getCheckout = (req, res, next) => {\r\n  res.render('shop/checkout', {\r\n    pageTitle: 'Checkout',\r\n    path: '/checkout'\r\n  })\r\n}\r\n"]}