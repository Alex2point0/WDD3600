{"version":3,"sources":["shop.js"],"names":["Product","require","exports","getProducts","req","res","next","findAll","products","render","prods","pageTitle","err","console","log","getProduct","prodId","params","productId","findByPk","product","path","title","getIndex","getCart","then","postCart","user","fetchedCart","cart","where","id","length","oldQuantity","newQuantity","cartItem","quantity","findById","data","through","addProduct","redirect","postCartDeleteProduct","destroy","result","postOrder","createOrder","map","orderItem","setProducts","include","orders"],"mappings":"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","file":"shop.min.js","sourcesContent":["// constant holding required product location\r\nconst Product = require('../models/product')\r\n\r\n// export function to get all products\r\nexports.getProducts = (req, res, next) => {\r\n  Product.findAll()\r\n    .then(products => {\r\n      res.render('shop/product-list', {\r\n        prods: products,\r\n        pageTitle: 'All Products',\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\n// export function to get singular product\r\nexports.getProduct = (req, res, next) => {\r\n  const prodId = req.params.productId\r\n  Product.findByPk(prodId)\r\n    .then(products => {\r\n      res.render('shop/product-detail', {\r\n        product: product,\r\n        pageTitle: product.title,\r\n        path: '/products'\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for shop page\r\nexports.getIndex = (req, res, next) => {\r\n  Product.findAll()\r\n    .then(products => {\r\n      res.render('shop/index', {\r\n        prods: products,\r\n        pageTitle: 'Shop',\r\n        path: '/'\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.getCart = (req, res, next) => {\r\n  req.user\r\n    .getCart()\r\n    .then(cart => {\r\n      return cart\r\n        .getProducts()\r\n        .then(products => {\r\n          res.render('shop/cart', {\r\n            path: '/cart',\r\n            pageTitle: 'Your Cart',\r\n            products: products\r\n          })\r\n        })\r\n        .catch(err => console.log(err))\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for cart page\r\nexports.postCart = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  let fetchedCart\r\n  let newQuantity = 1\r\n  req.user\r\n    .getCart()\r\n    .then(cart => {\r\n      fetchedCart = cart\r\n      return cart.getProducts({ where: { id: prodId } })\r\n    })\r\n    .then(products => {\r\n      let product\r\n      if (products.length > 0) {\r\n        product = products[0]\r\n      }\r\n      if (product) {\r\n        const oldQuantity = product.cartItem.quantity\r\n        newQuantity = oldQuantity + 1\r\n        return product\r\n      }\r\n      return Product.findById(prodId)\r\n    })\r\n    .then(data => {\r\n      return fetchedCart.addProduct(product, {\r\n        through: { quantity: newQuantity }\r\n      })\r\n    })\r\n    .then(() => {\r\n      res.redirect('/cart')\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexports.postCartDeleteProduct = (req, res, next) => {\r\n  const prodId = req.body.productId\r\n  req.user\r\n    .getCart()\r\n    .then(cart => {\r\n      return cart.getProducts({ where: { id: prodId } })\r\n    })\r\n    .then(products => {\r\n      const product = products[0]\r\n      return product.cartItem.destroy()\r\n    })\r\n    .then(result => {\r\n      res.redirect('/cart')\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n// something\r\nexports.postOrder = (req, res, next) => {\r\n  let fetchedCart\r\n  req.user\r\n    .getCart()\r\n    .then(cart => {\r\n      fetchedCart = cart\r\n      return cart.getProducts()\r\n    })\r\n    .then(products => {\r\n      return req.user\r\n        .createOrder()\r\n        .then(order => {\r\n          return order.addProducts(\r\n            products.map(product => {\r\n              product.orderItem = { quantity: product.cartItem.quantity }\r\n              return product\r\n            })\r\n          )\r\n        })\r\n        .catch(err => console.log(err))\r\n    })\r\n    .then(result => {\r\n      return fetchedCart.setProducts(null)\r\n    })\r\n    .then(result => {\r\n      res.redirect('/orders')\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// export function to get content for orders page\r\nexports.getOrders = (req, res, next) => {\r\n  req.user\r\n    .getOrders({ include: ['products'] })\r\n    .then(orders => {\r\n      res.render('shop/orders', {\r\n        path: '/orders',\r\n        pageTitle: 'Your Orders',\r\n        orders: orders\r\n      })\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n"]}